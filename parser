#!/usr/bin/awk -f

function inline(s) {
	gsub(/\\/, "\\\\", s)
	gsub(/\"/, "\\[u0022]", s)

	gsub(/<</, "\\(Fo", s)
	gsub(/>>/, "\\(Fc", s)

	gsub(/\s---/, "\\h'4p'\\(em", s)
	gsub(/--/, "\\(em", s)

	for (i = 1; i <= length(s); ++i) {
		pref = substr(s, 1, i - 1)
		subs = substr(s, i)

		if (subs ~ /^''''/) {
			if (fam == "\\fR")
				fam = "\\f(BI"
			else
				fam = "\\fR"

			sub(/^''''/, fam, subs)
		}
		else if (subs ~ /^'''/) {
			if (fam == "\\fR")
				fam = "\\fI"
			else
				fam = "\\fR"

			sub(/^'''/, fam, subs)
		}
		else if (subs ~ /^''/) {
			if (fam == "\\fR")
				fam = "\\fB"
			else
				fam = "\\fR"

			sub(/^''/, fam, subs)
		}

		s = pref subs
	}

	s = gensub(/\s*\$\$([^$]+)\$\$\s*/, "\n.EQ\n\\1\n.EN\n", "g", s)
	sub(/^\n/, "", s)
	sub(/\n$/, "", s)

	return s
}

BEGIN {
	fam = "\\fR"
}

/^-\ .+/ {
	sub(/^-\ /, "")
	output = output ".heading@S1 \"" inline($0) "\"\n"
	output = output ".tm .content@L1 \"" inline($0) "\" \\n%\n"
	next
}

/^--\ .+/ {
	sub(/^--\ /, "")
	output = output ".heading@S2 \"" inline($0) "\"\n"
	output = output ".tm .content@L2 \"" inline($0) "\" \\n%\n"
	print output >"/tmp/123"
	next
}

/^---\ .+/ {
	sub(/^---\ /, "")
	output = output ".heading@S3 \"" inline($0) "\"\n"
	output = output ".tm .content@L3 \"" inline($0) "\" \\n%\n"
	next
}

/^~$/ {
	while (getline > 0) {
		if (/^organization:$/) {
			print ".cover@org" >covpage
			while (getline > 0) {
				if (/^[~]?$/)
					break

				print inline($0) >covpage
			}
		}
		else if (/^admission:$/) {
			getline position
			getline name
			args = "\""inline(position) "\" \"" inline(name) "\""
			print ".cover@adm " args >covpage
		}
		else if (/^title:$/) {
			print ".cover@title" >covpage
			while (getline > 0) {
				if (/^[~]?$/)
					break

				print inline($0) >covpage
			}
		}
		else if (/^supervisor:$/) {
			getline position
			getline name
			args = "\""inline(position) "\" \"" inline(name) "\""
			print ".cover@super " args >covpage
		}
		else if (/^author:$/) {
			getline position
			getline name
			args = "\""inline(position) "\" \"" inline(name) "\""
			print ".cover@author " args >covpage
		}

		if (/^~$/) {
			break
		}
	}

	skipline = NR + 1
	print ".cover@end" >covpage
	next
}

/^-$/ {
	output = output ".font@monospace\n"

	while (getline > 0) {
		if (/^-$/)
			break

		gsub(/\\/, "\\\\")
		output = output inline($0) "\n"
	}

	output = output ".font@multispace\n"

	next
}

/^--$/ {
	output = output ".list@start\n"

	while (getline > 0) {
		if (/^--$/)
			break

		if (match($0, /^\t{3}\S+\ /)) {
			output = output ".list-item@L3 "
			num = substr($0, 4, RLENGTH - 4)
		}
		else if (match($0, /^\t{2}\S+\ /)) {
			output = output ".list-item@L2 "
			num = substr($0, 3, RLENGTH - 3)
		}
		else if (match($0, /^\t\S+\ /)) {
			output = output ".list-item@L1 "
			num = substr($0, 2, RLENGTH - 2)
		}
		else {
			output = output inline($0) "\n"
			continue
		}

		sub(/^\t{1,3}\S+\ /, "")

		if (num == "*")
			num = "\\(bu"

		output = output num "\n" inline($0) "\n"
	}

	output = output ".list@end\n"

	next
}

/^---$/ {
	output = output ".br\n"
	next
}

/^===$/ {
	output = output ".bp\n"
	skipline = NR + 1
	next
}

/^$/ {
	if (skipline != NR)
		output = output ".sp\n"
	next
}

/^\t/ {
	sub(/^\t/, "")
	output = output ".paragraph\n" inline($0) "\n"
	next
}

/^!P/ {
	if (/^!P\S+$/) {
		output = output ".image 0 " substr($0, 3) "\n"
		next
	}

	match($0, /\S+$/)
	var = substr($0, RSTART, RLENGTH)
	vars[var] = ++picnum

	output = output gensub(/^!P(\S+)\ (.+)\ \S+$/, ".image 1 \\1 " picnum " \"\\2\"\n", "g")
	next
}

/^!T/ {
	if (/^!T\S+$/) {
		output = output ".table 0 " substr($0, 3) "\n"
		next
	}

	match($0, /\S+$/)
	var = substr($0, RSTART, RLENGTH)
	vars[var] = ++tblnum

	output = output gensub(/^!T(\S+)\ (.+)\ \S+$/, ".table 1 \\1 " tblnum " \"\\2\"\n", "g")
	next
}

/^\$\$\ \S+/ {
	sub(/^\$\$\ /, "")
	vars[$0] = ++exprnum

	output = output ".ce 1000\n.mk es\n.EQ\n"

	while (getline > 0) {
		if (/^\$\$$/)
			break

		output = output $0 "\n"
	}

	output = output ".EN\n.mk en\n"
	output = output ".sp -((\\n[en]u-\\n[es]u)/2u+0.5v)\n"
	output = output ".in 0\n.ta \\n(.luR\n"
	output = output "\t(" exprnum ")\n"
	output = output ".sp |\\n[en]u\n"
	output = output ".ce 0\n"

	next
}

{
	output = output inline($0) "\n"
}

END {
	for (id in vars) {
		reg = "\\*" id "\\*"
		gsub(reg , vars[id], output)
	}

	print output
}
