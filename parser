#!/usr/bin/awk -f

function inline(s) {
	gsub(/<</, "\\(Fo", s)
	gsub(/>>/, "\\(Fc", s)
	gsub(/\s---/, "\\h'4p'\\(em", s)
	gsub(/--/, "\\(em", s)
	s = gensub(/\s*\$\$([^$]+)\$\$\s*/, "\n.EQ\n\\1\n.EN\n", "g", s)
	sub(/^\n/, "", s)
	sub(/\n$/, "", s)

	return s
}

/^-\ .+/ {
	sub(/^-\ /, "")
	file = file ".H1 \"" $0 "\"\n"
	next
}

/^--\ .+/ {
	sub(/^--\ /, "")
	file = file ".H2 \"" $0 "\"\n"
	next
}

/^---\ .+/ {
	sub(/^---\ /, "")
	file = file ".H3 \"" $0 "\"\n"
	next
}

/^-$/ {
	file = file ".fam C\n"

	for (; (getline s) > 0;) {
		if (match(s, /^-$/))
			break

		file = file s "\n.br\n"
	}

	file = file ".fam T\n"

	next
}

/^--$/ {
	if (isrs) {
		file = file ".RE\n"
		isrs = 0
	}
	else {
		file = file ".RS\n"
		isrs = 1
	}
	next
}

/^---$/ {
	file = file ".br\n"
	next
}

/^===$/ {
	file = file ".bp\n"
	getline
	next
}

/^$/ {
	file = file ".sp\n"
	next
}

/^\ {4}/ {
	sub(/^\ {4}/, "")
	file = file ".PP\n" inline($0) "\n"
	next
}

/^\t{1,3}.+\ .+/ {
	if (match($0, /^\t{3}.+\ /)) {
		file = file ".PI3 "
		num = substr($0, 4, RLENGTH - 4)
	}
	else if (match($0, /^\t{2}.+\ /)) {
		file = file ".PI2 "
		num = substr($0, 3, RLENGTH - 3)
	}
	else if (match($0, /^\t.+\ /)) {
		file = file ".PI1 "
		num = substr($0, 2, RLENGTH - 2)
	}

	sub(/^.+\ /, "")

	if (num == "*")
		num = "\\(bu"

	file = file num "\n" $0 "\n"
	next
}

/^!P/ {
	file = file gensub(/^!P(.+)\ (".+")\ .+$/, ".IM \\1 \\2\n", "g")

	match($0, /"\ .+$/)
	var = substr($0, RSTART + 2, RLENGTH - 2)
	vars[var] = ++picnum
	next
}

/^!T/ {
	file = file gensub(/^!T(.+)\ (".+")\ .+$/, ".TA \\1 \\2\n", "g")

	match($0, /"\ .+$/)
	var = substr($0, RSTART + 2, RLENGTH - 2)
	vars[var] = ++tblnum
	next
}

/^\$\$\ \S+/ {
	sub(/^\$\$\ /, "")
	vars[$0] = ++exprnum

	file = file ".ce 1000\n.mk es\n.EQ\n"

	while (getline > 0) {
		if ($0 ~ /^\$\$$/) {
			break
		}

		file = file $0 "\n"
	}

	file = file ".EN\n.mk en\n"
	file = file ".sp -((\\n[en]u-\\n[es]u)/2u+0.5v)\n"
	file = file ".in 0\n.ta \\n(.luR\n"
	file = file "\t(" exprnum ")\n"
	file = file ".sp |\\n[en]u\n"

	next
}

{
	file = file inline($0) "\n"
}

END {
	for (id in vars) {
		reg = "\\*" id "\\*"
		gsub(reg , vars[id], file)
	}

	print file
}
